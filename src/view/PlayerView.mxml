<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 height="70" creationComplete="creationCompleteHandler(event)">
	
	<fx:Declarations>
		<fx:Boolean id="draggingTrackSlide">false</fx:Boolean>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import config.TrackflexConfig;
			
			import controller.PlayerController;
			
			import mx.events.FlexEvent;
			
			[Embed(source="assets/icons/player_play.png")]
			[Bindable]
			public static var ASSET_PLAY : Class;

			[Embed(source="assets/icons/player_pause.png")]
			[Bindable]
			public static var ASSET_PAUSE : Class;
			
			protected function play_clickHandler(event : MouseEvent) : void
			{
				if (PlayerController.currentTrack == null)
					return;
				
				PlayerController.play();
			}
			
			protected function volumeslide_changeHandler(event : Event) : void
			{
				PlayerController.setVolume(volumeslide.value / 100);
			}
			
			protected function trackslide_changeHandler(event : Event) : void
			{
				if (PlayerController.currentTrack != null)
				{
					PlayerController.pausePoint = trackslide.value * PlayerController.currentTrack.length;
					PlayerController.refreshTime();
				}
			}
			
			protected function creationCompleteHandler(event : FlexEvent) : void
			{
				trackslide.thumb.addEventListener(MouseEvent.MOUSE_DOWN, onThumbMouseDownHandler);
				trackslide.showDataTip = false;
				volumeslide.dataTipPrecision = 0;
				
			}
			
			protected function onThumbMouseDownHandler(event : MouseEvent) : void
			{
				draggingTrackSlide = true;
				removeEventListener(Event.ENTER_FRAME, PlayerController.onProgressHandler);
			}
			
			public function onThumbMouseUpHandler(event : MouseEvent) : void
			{
				PlayerController.changeSoundPosition();
				draggingTrackSlide = false;
				if (PlayerController.playing)
					addEventListener(Event.ENTER_FRAME, PlayerController.onProgressHandler);
			}
			
			protected function stop_clickHandler(event : MouseEvent) : void
			{
				PlayerController.stop();
				PlayerController.playing = false;
			}
			
			protected function prev_clickHandler(event : MouseEvent) : void
			{
				PlayerController.previous();
			}
			
			protected function next_clickHandler(event : MouseEvent) : void
			{
				PlayerController.next();
			}
			
			protected function random_clickHandler(event : MouseEvent) : void
			{
				TrackflexConfig.random = !TrackflexConfig.random;
				trace ("random", TrackflexConfig.random);
			}
			
			protected function loop_clickHandler(event : MouseEvent) : void
			{
				TrackflexConfig.loop = ++TrackflexConfig.loop % 3;
				trace ("loop", TrackflexConfig.loop);
			}
			
		]]>
	</fx:Script>
	
	
	<fx:Declarations>
		<!-- Placer ici les Ã©lÃ©ments non visuels (services et objets de valeur, par exemple). -->
	</fx:Declarations>
	
	<s:BorderContainer x="0" y="0" width="100%" height="100%" backgroundColor="0x333333"
					   borderColor="0x000000">
		<mx:Button id="prev" left="10" width="35" height="35" cornerRadius="90"
				  icon="@Embed('assets/icons/player_start.png')" verticalCenter="0"
				  click="prev_clickHandler(event)"/>
		<mx:Button id="play" left="55" width="50" height="50" click="play_clickHandler(event)"
				  cornerRadius="90" icon="{ASSET_PLAY}"
				  verticalCenter="0"/>
		<mx:Button id="stop" left="115" width="35" height="35" click="stop_clickHandler(event)"
				  cornerRadius="90" icon="@Embed('assets/icons/player_stop.png')"
				  verticalCenter="0"/>
		<mx:Button id="next" left="160" width="35" height="35" cornerRadius="90"
				  icon="@Embed('assets/icons/player_end.png')" verticalCenter="0"
				  click="next_clickHandler(event)"/>
		
		<s:HSlider id="trackslide" left="300" right="275" change="trackslide_changeHandler(event)"
				   maximum="1" minimum="0" stepSize="0.001" verticalCenter="16"/>
		
		<s:HSlider id="volumeslide" right="10" width="70" change="volumeslide_changeHandler(event)"
				   maximum="100" minimum="0" value="100" verticalCenter="0"/>
		<s:Image id="volumeicon" right="74" width="56" height="28"
				 source="@Embed('assets/volume-icone.png')" verticalCenter="-3"/>
		<s:Label id="time" left="205" width="87" height="15" fontFamily="Verdana" fontSize="14"
				 text="0:00/0:00" textAlign="center" verticalAlign="middle" verticalCenter="-16"/>
		<s:Label id="trackInfo" left="300" width="100%" height="15" fontFamily="Verdana" fontSize="14"
				 verticalCenter="-16"/>
		<s:Image id="loop" x="251" y="45" source="assets/icons/forward.gif" buttonMode="true"
				 click="loop_clickHandler(event)"/>
		<s:Image id="random" x="213" y="45" source="assets/icons/back.gif" buttonMode="true"
				 click="random_clickHandler(event)"/>
	</s:BorderContainer>
</s:Group>
