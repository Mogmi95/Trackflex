<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="creationCompleteHandler(event)">
	<fx:Declarations>
		<!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
	</fx:Declarations>
	
	<mx:UIComponent id="viewportContainer" width="100%" height="100%"/>
	
	<fx:Script>
		
		<![CDATA[
			import aerys.minko.render.Viewport;
			import aerys.minko.scene.node.camera.ArcBallCamera;
			import aerys.minko.scene.node.group.Group;
			import aerys.minko.scene.node.group.StyleGroup;
			import aerys.minko.scene.node.mesh.primitive.SphereMesh;
			
			import mx.events.FlexEvent;
			
			import view.minko.render.SoundEffect;
			import view.minko.scene.SoundNode;
			
			private var _viewport   : Viewport     		= new Viewport(4);
			private var _camera     : ArcBallCamera		= new ArcBallCamera();
			private var _scene 		: StyleGroup		= new StyleGroup(_camera);
			private var _point		: Point				= new Point();
			
			public function set viewport(value:Viewport):void
			{
				_viewport = value;
			}

			public function get viewport() : Viewport
			{
				return _viewport;
			}

			protected function creationCompleteHandler(event : FlexEvent ) : void
			{
				_scene.addChild(new aerys.minko.scene.node.group.Group(
					_camera,
					new SoundNode(),
					new SphereMesh(40)
				));
				
				_viewport.defaultEffect = new SoundEffect();
				
				_camera.distance = 2;
				_camera.rotation.x -= .3;
				
				_viewport.alwaysOnTop = true;
				_viewport.backgroundColor = 0x666666;
				viewportContainer.addChild(_viewport);
				
				_viewport.addEventListener(Event.ENTER_FRAME, enterFrameHandler);
				_viewport.addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
			}
			
			public function enterFrameHandler(event : Event) : void
			{
				_viewport.render(_scene);
			}
			
			private function mouseMoveHandler(event : MouseEvent) : void
			{
				if (event.buttonDown)
				{
					_camera.rotation.y += (_point.x - event.localX) * .01;
					_camera.rotation.x += (_point.y - event.localY) * .01;
				}
				
				_point.x = event.localX;
				_point.y = event.localY;
			}
		]]>
	</fx:Script>
</s:Group>
