<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
		<s:HTTPService id="httpService" result="handleSuccess(event)" fault="handleFault(event)" />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import webservices.ServiceLastFM;
			import webservices.ServiceLastFMEvent;
			
			private var API_ROOT:String = "http://ws.audioscrobbler.com/2.0/";
			private var API_KEY:String = "7b36c2365fed1c01db36276aa86d89ba";
			[Bindable]
			private var jacquette:String = "assets/unknown3.png"; 
			
			public function getArtistInfo(artist : String):void {
				httpService.url = API_ROOT + "?method=artist.getinfo&artist=" + artist + "&api_key=" + API_KEY;
				httpService.method = "GET";
				httpService.send();
			}
			
			private function handleSuccess(event:ResultEvent):void {
				var xmlData:XML = new XML(event.message.body);
				var url:String = event.target.url as String;
				if (url.search("getinfo") != -1) {
					var jacquetteList:XMLList = xmlData.artist.image as XMLList;
					var bio:String = xmlData.artist.bio.summary;
					jacquette = jacquetteList[3];
					artistBio.text = bio.replace(new RegExp("<[^<]+?>", "gi"), "");
				} 
			}
			private function handleFault(event:FaultEvent):void {
/* 				trace(event.message);
				trace(event.cancelable);
				trace(event.target);
				trace(event.type); */
			}
			
			private function init():void {
				ServiceLastFM.getInstance().addEventListener(ServiceLastFMEvent.ARTIST_GET_INFO, HandleArtistInfo);
			}
			
			private function HandleArtistInfo(event:ServiceLastFMEvent):void {
				var xmlData : XML = event.result;
				var bio:String = xmlData.artist.bio.summary;
				artistBio.text = bio.replace(new RegExp("<[^<]+?>", "gi"), "");
				var jacquetteList:XMLList = xmlData.artist.image as XMLList;
				artistImg.source = jacquetteList[3];
			}
			
		]]>
	</fx:Script>
	<s:BorderContainer width="100%" height="100%"
					   backgroundColor="0x444444" borderColor="0x666666">
		<s:Scroller x="0" y="0" width="100%" height="100%">
			<s:Group width="100%" height="100%">
				<s:Image id="artistImg" y="10" right="10" width="126" height="126"
						 source="{jacquette}"/>
				<s:Label id="artistBio" left="10" right="10" top="170">
				</s:Label>
				<s:Label id="artistName" left="10" right="10" top="140" height="20" fontSize="16"
						 fontWeight="bold" textAlign="left" verticalAlign="middle"/>
			</s:Group>
		</s:Scroller>
	</s:BorderContainer>
</s:Group>
